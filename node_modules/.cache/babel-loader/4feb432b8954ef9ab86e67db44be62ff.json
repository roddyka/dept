{"ast":null,"code":"import _slicedToArray from \"/home/gtu/Documentos/dept/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gtu/Documentos/dept/src/components/contact/index.js\";\nimport React, { useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\nimport './style.css';\nimport api from '../../services/api';\nimport FlipMove from 'react-flip-move';\nimport { useForm } from 'react-hook-form';\n\nconst Contact = () => {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        watch = _useForm.watch,\n        errors = _useForm.errors;\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropdownOpen = _useState2[0],\n        setDropdownOpen = _useState2[1];\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  return React.createElement(React.Fragment, null, React.createElement(Col, {\n    sx: \"2\",\n    sm: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Col, {\n    sx: \"8\",\n    sm: \"8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"exampleEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    type: \"email\",\n    name: \"example\",\n    id: \"exampleEmail\",\n    placeholder: \"with a placeholder\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"exampleText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Message\"), React.createElement(Input, {\n    type: \"textarea\",\n    name: \"exampleRequired\",\n    id: \"exampleText\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), errors.exampleRequired && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"This field is required\")), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(FormText, {\n    color: \"muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Send us a E-mail.\")), React.createElement(Input, {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(Col, {\n    sx: \"2\",\n    sm: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/home/gtu/Documentos/dept/src/components/contact/index.js"],"names":["React","useState","Button","Form","FormGroup","Label","Input","FormText","Col","api","FlipMove","useForm","Contact","register","handleSubmit","watch","errors","onSubmit","data","console","log","dropdownOpen","setDropdownOpen","toggle","prevState","required","exampleRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button, Form, FormGroup, Label, Input, FormText , Col\n} from 'reactstrap';\nimport './style.css';\nimport api from '../../services/api';\nimport FlipMove from 'react-flip-move';\nimport { useForm } from 'react-hook-form';\nconst Contact = () =>{\n\n  const { register, handleSubmit, watch, errors } = useForm()\n  const onSubmit = data => { console.log(data) }\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    return (\n      <>\n      <Col sx=\"2\" sm=\"2\"></Col>\n     <Col sx=\"8\" sm=\"8\" >\n        <Form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input type=\"email\" name=\"example\" id=\"exampleEmail\" placeholder=\"with a placeholder\"  ref={register} />\n            \n          </FormGroup>\n          \n          <FormGroup>\n          <Label for=\"exampleText\">Message</Label>\n            <Input type=\"textarea\"  name=\"exampleRequired\" id=\"exampleText\" ref={register({ required: true })}/>\n            {errors.exampleRequired && <span>This field is required</span>}\n          </FormGroup>\n          <FormGroup>\n            <FormText color=\"muted\">\n              Send us a E-mail.\n            </FormText>\n          </FormGroup>\n          <Input type=\"submit\" className=\"btn btn-success\">Submit</Input>\n        </Form>\n    </Col>\n    <Col sx=\"2\" sm=\"2\"></Col>\n    </>\n    )\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}