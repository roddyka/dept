{"ast":null,"code":"var _jsxFileName = \"/home/gtu/Documentos/dept/src/components/forms/index.js\";\nimport React, { useState } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, Col, Dropdown, Drop, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap';\nimport { useForm } from 'react-hook-form';\nimport './style.css';\nimport api from '../../services/api';\nimport FlipMove from 'react-flip-move';\n\nconst Forms = () => {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        watch = _useForm.watch,\n        errors = _useForm.errors;\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  console.log(watch('example')); // watch input value by passing the name of it\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"example\",\n    defaultValue: \"test\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"exampleRequired\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), errors.exampleRequired && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"This field is required\"), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), \")\");\n};\n\nexport default Forms;","map":{"version":3,"sources":["/home/gtu/Documentos/dept/src/components/forms/index.js"],"names":["React","useState","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Col","Dropdown","Drop","DropdownMenu","DropdownItem","DropdownToggle","useForm","api","FlipMove","Forms","register","handleSubmit","watch","errors","onSubmit","data","console","log","required","exampleRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,IADF,EACQC,OADR,EACiBC,QADjB,EAC2BC,QAD3B,EAEEC,SAFF,EAEaC,YAFb,EAE2BC,MAF3B,EAEmCC,GAFnC,EAEwCC,QAFxC,EAEkDC,IAFlD,EAEwDC,YAFxD,EAEsEC,YAFtE,EAEoFC,cAFpF,QAGO,YAHP;AAIA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAGA,MAAMC,KAAK,GAAG,MAAK;AAAA,mBACiCH,OAAO,EADxC;AAAA,QACTI,QADS,YACTA,QADS;AAAA,QACCC,YADD,YACCA,YADD;AAAA,QACeC,KADf,YACeA,KADf;AAAA,QACsBC,MADtB,YACsBA,MADtB;;AAEjB,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAmB,GAA9C;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAAC,SAAD,CAAjB,EAJiB,CAIa;;AAC5B,SACE,0CAEF;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,YAAY,EAAC,MAAnC;AAA0C,IAAA,GAAG,EAAEJ,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKE;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,GAAG,EAAEA,QAAQ,CAAC;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOGL,MAAM,CAACM,eAAP,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAP7B,EASE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAFE,MADF;AAkBH,CAvBD;;AAyBA,eAAeV,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button, Col, Dropdown, Drop, DropdownMenu, DropdownItem, DropdownToggle\n} from 'reactstrap';\nimport { useForm } from 'react-hook-form';\nimport './style.css';\nimport api from '../../services/api';\nimport FlipMove from 'react-flip-move';\n\n\nconst Forms = () =>{\n  const { register, handleSubmit, watch, errors } = useForm()\n  const onSubmit = data => { console.log(data) }\n\n  console.log(watch('example')) // watch input value by passing the name of it\n    return (\n      <>\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\n    <form onSubmit={handleSubmit(onSubmit)}>\n    {/* register your input into the hook by invoking the \"register\" function */}\n      <input name=\"example\" defaultValue=\"test\" ref={register} />\n      \n      {/* include validation with required or other standard HTML validation rules */}\n      <input name=\"exampleRequired\" ref={register({ required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}\n      \n      <input type=\"submit\" />\n    </form>\n  )\n      \n    </>\n    )\n}\n\nexport default Forms;"]},"metadata":{},"sourceType":"module"}